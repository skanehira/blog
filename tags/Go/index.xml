<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on ゴリラ@転生したら人間だった件</title><link>https://skanehira.github.io/blog/tags/Go/</link><description>Recent content in Go on ゴリラ@転生したら人間だった件</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 13 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://skanehira.github.io/blog/tags/Go/index.xml" rel="self" type="application/rss+xml"/><item><title>Slackのreminder使いづらすぎたのでCLIを作った</title><link>https://skanehira.github.io/blog/posts/20210514-go-slack-reminder/</link><pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20210514-go-slack-reminder/</guid><description>初めに みなさんSlackの/reminderを使っていますか？ 個人的に以下の理由でめちゃくちゃ使いづらいなと感じています。 書式覚えられない（</description></item><item><title>GoでCLIを作る時のテンプレートリポジトリを作った</title><link>https://skanehira.github.io/blog/posts/20210421-go-cli-template/</link><pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20210421-go-cli-template/</guid><description>初めに 普段Goを使ってCLIなどを作ることが多く、毎度CI/CDをセットアップしたり、go getでライブラリを導入するが面倒なのでテンプレー</description></item><item><title>Goでハッシュ値計算時にメモリ消費量を抑える方法</title><link>https://skanehira.github.io/blog/posts/20210418-go-hash/</link><pubDate>Sun, 18 Apr 2021 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20210418-go-hash/</guid><description>初めに 先日、Lambdaでファイルのチェックサムをしていたら、ファイルサイズが大きすぎてout of memoryを起こしたという事象に遭遇しまし</description></item><item><title>yamlをインタラクティブに絞り込みできるCLIを作った</title><link>https://skanehira.github.io/blog/posts/20210320-go-yaml-yd/</link><pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20210320-go-yaml-yd/</guid><description>初めに 最近仕事で少しk8s周りを触っています。k8sのマニフェストはyamlですが、 kustomizeなどを使ってリソースをまとめたりすると</description></item><item><title>GitHubのTUIツールを作った</title><link>https://skanehira.github.io/blog/posts/20210222-go-github-tui/</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20210222-go-github-tui/</guid><description>以前に VimでGitHubを操作するプラグインgh.vimの紹介 という記事を書きました。 こちらの記事で紹介したgh.vimはVim上でGit</description></item><item><title>Swaggerをプレビューする簡単なCLI</title><link>https://skanehira.github.io/blog/posts/20200205-go-swagger-preview/</link><pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20200205-go-swagger-preview/</guid><description>初めに 仕事でAPIのドキュメントにswaggerを使っていますが、プレビューするために毎度VSCodeを立ち上げて使っていました。 しかし、こ</description></item><item><title>Goの宣言済みの識別子は再宣言できる</title><link>https://skanehira.github.io/blog/posts/20210113-go-identifiers-redeclared/</link><pubDate>Wed, 13 Jan 2021 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20210113-go-identifiers-redeclared/</guid><description>最近コツコツとGoの仕様書を日本語に翻訳しています。 その中で識別子について分かったことがあるので、それについてまとめた記事になります。 識別子</description></item><item><title>あまり知られていないGoのスライス/配列の初期化</title><link>https://skanehira.github.io/blog/posts/20201202-go-slice-initialize/</link><pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20201202-go-slice-initialize/</guid><description>初めに 先日、こちらの動画で見たことがない配列の初期化をしていたので、それについてわかったことを解説してきます。 配列の初期化 動画のほうでは次の</description></item><item><title>Goで作ったライブラリのバージョンアップ手順</title><link>https://skanehira.github.io/blog/posts/20201112-go-versionup-library/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20201112-go-versionup-library/</guid><description>初めに 以前Goでクリップボードから画像を取得&amp;amp;保存できるライブラリclipboard-imageを作りました。 ただ、関数名が気に入ら</description></item><item><title>コミットIDからGitHubのPRリンクを取得するCLI</title><link>https://skanehira.github.io/blog/posts/20201104-go-get-github-pr-url/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://skanehira.github.io/blog/posts/20201104-go-get-github-pr-url/</guid><description>初めに 普段GitHubを使って仕事で、次のフローで開発をしています。 PRを出す レビュー マージ そして、たまにバグを見つけるので、git blam</description></item></channel></rss>